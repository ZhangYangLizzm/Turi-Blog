import{_ as n,o as s,c as a,a as t}from"./app.40cb2b3f.js";const p={},e=t(`<h1 id="vite-plugins" tabindex="-1"><a class="header-anchor" href="#vite-plugins" aria-hidden="true">#</a> Vite Plugins</h1><h2 id="\u56FE\u7247\u538B\u7F29" tabindex="-1"><a class="header-anchor" href="#\u56FE\u7247\u538B\u7F29" aria-hidden="true">#</a> \u56FE\u7247\u538B\u7F29</h2><p><code>yarn add vite-plugin-imagemin</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//vite.config.ts</span>
<span class="token keyword">import</span> imagemin <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-imagemin&#39;</span>

plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token operator">...</span>
 <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6253\u5305\u6587\u4EF6\u5927\u5C0F\u53EF\u89C6\u5316" tabindex="-1"><a class="header-anchor" href="#\u6253\u5305\u6587\u4EF6\u5927\u5C0F\u53EF\u89C6\u5316" aria-hidden="true">#</a> \u6253\u5305\u6587\u4EF6\u5927\u5C0F\u53EF\u89C6\u5316</h2><p><code>yarn add rollup-plugin-visualizer</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//vite.config.ts</span>
<span class="token keyword">import</span> visualizer <span class="token keyword">from</span> <span class="token string">&#39;rollup-plugin-visualizer&#39;</span>

plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">visualizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token operator">...</span>
 <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u5305\u4F1A\u751F\u6210<code>stats.html</code>\u6253\u5F00\u5373\u53EF</p><h2 id="https" tabindex="-1"><a class="header-anchor" href="#https" aria-hidden="true">#</a> https</h2><p>\u5BF9\u57FA\u672C\u4F7F\u7528\u7684\u914D\u7F6E\u9700\u6C42\u6765\u8BF4\uFF0C\u53EF\u4EE5\u6DFB\u52A0 @vitejs/plugin-basic-ssl \u5230\u9879\u76EE\u63D2\u4EF6\u4E2D\uFF0C\u4F1A\u81EA\u52A8\u521B\u5EFA\u548C\u7F13\u5B58\u4E00\u4E2A\u81EA\u7B7E\u540D\u7684\u8BC1\u4E66\u3002</p><p><code>yarn add @vitejs/plugin-basic-ssl</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// vite.config.js</span>
<span class="token keyword">import</span> basicSsl <span class="token keyword">from</span> <span class="token string">&quot;@vitejs/plugin-basic-ssl&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">basicSsl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6839\u636E-assets-\u4E2D\u7684\u56FE\u7247\u6587\u4EF6\u751F\u6210-imagekeys" tabindex="-1"><a class="header-anchor" href="#\u6839\u636E-assets-\u4E2D\u7684\u56FE\u7247\u6587\u4EF6\u751F\u6210-imagekeys" aria-hidden="true">#</a> \u6839\u636E assets \u4E2D\u7684\u56FE\u7247\u6587\u4EF6\u751F\u6210 imagekeys</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin<span class="token punctuation">,</span> normalizePath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> glob <span class="token keyword">from</span> <span class="token string">&quot;glob&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> fs <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span>
  extensions<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  outputFilePath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">assetsToTs</span><span class="token punctuation">(</span>options<span class="token operator">:</span> Options<span class="token punctuation">)</span><span class="token operator">:</span> Plugin <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> extensions<span class="token punctuation">,</span> outputFilePath <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;assets-to-ts&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">**/*.{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>extensions<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> files <span class="token operator">=</span> glob<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token punctuation">{</span> cwd<span class="token operator">:</span> <span class="token string">&quot;src/assets/images&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> assets <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> normalFilePath <span class="token operator">=</span> <span class="token function">normalizePath</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> normalFilePath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> parts <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> obj <span class="token operator">=</span> assets<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> parts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> part <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">[</span>part<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            obj<span class="token punctuation">[</span>part<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          obj <span class="token operator">=</span> obj<span class="token punctuation">[</span>part<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> camelCaseKey <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span>parts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">[</span>camelCaseKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/src/assets/images/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>normalFilePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">// This file is generated by the Vite plugin &quot;assets-to-ts&quot;
// DO NOT MODIFY THIS FILE MANUALLY

const ImageAssets = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">formatObject</span><span class="token punctuation">(</span>assets<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;

export default ImageAssets;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

      fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>outputFilePath<span class="token punctuation">)</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5C06\u5BF9\u8C61\u683C\u5F0F\u5316\u4E3A TypeScript \u4EE3\u7801\u4E2D\u53EF\u7528\u7684\u5B57\u7B26\u4E32\u3002
 *
 * @param obj \u8981\u683C\u5F0F\u5316\u7684\u5BF9\u8C61
 * @param indent \u6BCF\u4E00\u7EA7\u7F29\u8FDB\u7684\u7A7A\u683C\u6570\uFF0C\u9ED8\u8BA4\u4E3A &quot;&quot;\uFF08\u5373\u4E0D\u7F29\u8FDB\uFF09
 * @returns \u8FD4\u56DE\u683C\u5F0F\u5316\u540E\u7684\u5B57\u7B26\u4E32
 * @example  
 * swiper: {
      swipImg04: &#39;@/assets/home/swiper/swip_img04.png&#39;,
      swipImg03: &#39;@/assets/home/swiper/swip_img03.png&#39;,
      swipImg02: &#39;@/assets/home/swiper/swip_img02.png&#39;,
      swipImg01: &#39;@/assets/home/swiper/swip_img01.png&#39;
    }
 */</span>
<span class="token comment">// eslint-disable-next-line @typescript-eslint/no-explicit-any</span>
<span class="token keyword">function</span> <span class="token function">formatObject</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> indent <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lines<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>indent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">formatObject</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>indent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      lines<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>indent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lines<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>indent<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 *
 * @param str \u8F93\u5165\u7684\u5B57\u7B26\u4E32
 * @returns \u9A7C\u5CF0\u547D\u540D\u7684\u5B57\u7B26\u4E32
 * @example
 * sec-img ---&gt; secImg
 */</span>
<span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[-_]+(.)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> letter<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> letter<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u65B9\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> assetsToKeys <span class="token keyword">from</span> <span class="token string">&quot;./vite-plugin/imgaePlugin&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//vite.config.ts</span>
plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">assetsToKeys</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jpeg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gif&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;svg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      outputFilePath<span class="token operator">:</span> <span class="token string">&quot;src/assets/index.ts&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token operator">...</span>
 <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[e];function i(c,l){return s(),a("div",null,o)}var r=n(p,[["render",i],["__file","Vite_Plugins.html.vue"]]);export{r as default};
